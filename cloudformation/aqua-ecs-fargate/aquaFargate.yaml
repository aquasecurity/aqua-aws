AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This AWS CloudFormation template installs the Aqua Command Center componants
  in ECS FARGATE.
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: ECS Infrastructure Configuration
        Parameters:
          - EcsClusterName
          - VpcId
          - VpcCidr
          - EcsInstanceSubnets
          - LbSubnets
          - Region
      - Label:
          default: Aqua Security Configuration
        Parameters:
          - AquaConsoleAccess
          - AquaServerImage
          - AquaGatewayImage
      - Label:
          default: 'RDS Configuration: RDS Configuration'
        Parameters:
          - RdsInstanceName
          - RdsMasterUsername
          - RdsMasterPassword
          - RdsInstanceClass
          - RdsStorage
          - MultiAzDatabase
    ParameterLabels:
      EcsClusterName:
        default: ECS cluster name
      Region:
        default: AWS region
      VpcId:
        default: VPC ID
      VpcCidr:
        default: VPC CIDR
      EcsInstanceSubnets:
        default: ECS Instance Subnets
      LbSubnets:
        default: Aqua LB Subnets
      AquaConsoleAccess:
        default: Web Console Source
      RdsInstanceName:
        default: RDS instance name
      RdsMasterUsername:
        default: RDS username
      RdsMasterPassword:
        default: RDS password
      RdsInstanceClass:
        default: RDS instance type
      RdsStorage:
        default: RDS storage size (GB)
      MultiAzDatabase:
        default: Enable Multi-AZ RDS
Parameters:
  Region:
    Type: String
    Description: AWS region
  AquaServerImage:
    Type: String
    Description: Enter server image path on ECR
  AquaGatewayImage:
    Type: String
    Description: Enter gateway image path on ECR
  EcsClusterName:
    Description: Existing ECS cluster name
    Type: String
  VpcId:
    Description: VpcId to deploy into
    Type: 'AWS::EC2::VPC::Id'
  VpcCidr:
    Description: 'For use by load balancer service polling. Enter VPC CIDR. Ex: 10.0.0.0/16'
    Type: String
  EcsInstanceSubnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: Select all the subnets ECS utilizes
    ConstraintDescription: >-
      Password must be at least 9 characters long and have 3 out of the
      following: one number, one lower case, one upper case, or one special
      character.
  LbSubnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: Select external ones if you need internet access.
  AquaConsoleAccess:
    Description: The IP address or range that may be used to access the Aqua Console
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
  RdsInstanceName:
    Default: aquadb
    Description: ''
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and between 1 and 64 alphanumeric characters.
  RdsMasterUsername:
    Description: Enter the master username for the RDS instance.
    Type: String
    MinLength: '1'
    MaxLength: '63'
    AllowedPattern: '^[a-zA-Z0-9]*$'
    ConstraintDescription: >-
      Must be 1 to 63 characters long, begin with a letter, contain only
      alphanumeric characters, and not be a reserved word by PostgreSQL engine.
  RdsMasterPassword:
    NoEcho: 'true'
    Description: >-
      Enter the master password for the RDS instance. This password must contain
      8 to 128 characters and can be any printable ASCII character except @, /,
      or ".
    Type: String
    MinLength: '8'
    MaxLength: '128'
    AllowedPattern: >-
      ^((?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])|(?=.*[0-9])(?=.*[a-z])(?=.*[!@#$%^&*])|(?=.*[0-9])(?=.*[A-Z])(?=.*[!@#$%^&*])|(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*])).{8,128}$
    ConstraintDescription: >-
      Password must be at least 9 characters long and have 3 out of the
      following: one number, one lower case, one upper case, or one special
      character.
  RdsInstanceClass:
    Description: ''
    Type: String
    Default: db.t2.medium
    AllowedValues:
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
      - db.r3.large
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
    ConstraintDescription: Must be a valid EC2 RDS instance type
  RdsStorage:
    Default: '40'
    Description: ''
    Type: Number
    MinValue: '40'
    MaxValue: '1024'
    ConstraintDescription: Must be set to between 40 and 1024GB.
  MultiAzDatabase:
    Default: 'false'
    Description: ''
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    ConstraintDescription: Must be either true or false.
Resources:
  AquaConsole:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    DependsOn:
      - AquaConsoleSecurityGroup
    Properties:
      Name: !Join 
        - '-'
        - - !Ref EcsClusterName
          - AquaConsole
      Scheme: internet-facing
      SecurityGroups:
        - !Ref AquaConsoleSecurityGroup
      Subnets: !Ref LbSubnets
      Type: application
  AquaConsoleTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    DependsOn:
      - AquaEcsTaskRole
      - RdsInstance
      - AquaConsoleLogs
      - Secret0
    Properties:
      Family: !Join 
        - '-'
        - - !Ref EcsClusterName
          - aqua-console
      RequiresCompatibilities:
        - FARGATE
      Cpu: '406'
      Memory: '8192'
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref AquaEcsTaskRole
      ContainerDefinitions:
        - Name: !Join 
            - '-'
            - - !Ref EcsClusterName
              - aqua-console
          Image: !Ref AquaServerImage
          PortMappings:
            - ContainerPort: '8080'
              HostPort: '8080'
              Protocol: tcp
            - ContainerPort: '8443'
              HostPort: '8443'
              Protocol: tcp
          Essential: 'true'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Join ['-', ['/aqua/console', !Ref EcsClusterName]]
              awslogs-region: !Ref Region
              awslogs-stream-prefix: aquaConsole
          Secrets:
            - Name: SCALOCK_DBPASSWORD
              ValueFrom: !Ref Secret0
            - Name: SCALOCK_AUDIT_DBPASSWORD
              ValueFrom: !Ref Secret0
          Environment:
            - Name: AQUA_GRPC_MODE
              Value: 1
            - Name: AQUA_DOCKERLESS_SCANNING
              Value: 1
            - Name: SCALOCK_DBSSL
              Value: require
            - Name: SCALOCK_AUDIT_DBSSL
              Value: require
            - Name: SCALOCK_DBNAME
              Value: scalock
            - Name: BATCH_INSTALL_GATEWAY
              Value: !GetAtt 
                - AquaNlb
                - DNSName
            - Name: SCALOCK_DBUSER
              Value: !Ref RdsMasterUsername
            - Name: SCALOCK_DBHOST
              Value: !GetAtt 
                - RdsInstance
                - Endpoint.Address
            - Name: SCALOCK_AUDIT_DBUSER
              Value: !Ref RdsMasterUsername
            - Name: SCALOCK_AUDIT_DBNAME
              Value: slk_audit
            - Name: SCALOCK_AUDIT_DBHOST
              Value: !GetAtt 
                - RdsInstance
                - Endpoint.Address
      TaskRoleArn: !Ref AquaEcsTaskRole
  AquaConsoleService:
    Type: 'AWS::ECS::Service'
    DependsOn:
      - AquaConsoleTaskDefinition
      - AquaConsoleListener
      - AquaConsoleGrpcListener
    Properties:
      Cluster: !Ref EcsClusterName
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref AquaFargateSecurityGroup
          Subnets: !Ref EcsInstanceSubnets
      ServiceName: !Join 
        - '-'
        - - !Ref EcsClusterName
          - aqua-console
      DesiredCount: '1'
      DeploymentConfiguration:
        MaximumPercent: '100'
        MinimumHealthyPercent: '0'
      LoadBalancers:
        - ContainerName: !Join 
            - '-'
            - - !Ref EcsClusterName
              - aqua-console
          ContainerPort: '8080'
          TargetGroupArn: !Ref AquaConsoleTargetGroup
        - ContainerName: !Join 
            - '-'
            - - !Ref EcsClusterName
              - aqua-console
          ContainerPort: '8443'
          TargetGroupArn: !Ref AquaConsoleGrpcTargetGroup
      TaskDefinition: !Ref AquaConsoleTaskDefinition
  AquaConsoleListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    DependsOn:
      - AquaConsoleTargetGroup
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AquaConsoleTargetGroup
      LoadBalancerArn: !Ref AquaConsole
      Port: '8080'
      Protocol: HTTP
  AquaConsoleTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    DependsOn:
      - AquaConsole
    Properties:
      TargetType: ip
      HealthCheckIntervalSeconds: 6
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      Name: !Join 
        - '-'
        - - !Ref EcsClusterName
          - aqua-console
      Port: '8080'
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
      UnhealthyThresholdCount: 3
      VpcId: !Ref VpcId
  AquaGatewayListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    DependsOn:
      - AquaGatewayTargetGroup
      - AquaNlb
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AquaGatewayTargetGroup
      LoadBalancerArn: !Ref AquaNlb
      Port: '3622'
      Protocol: TCP
  AquaGatewayTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    DependsOn:
      - AquaNlb
    Properties:
      TargetType: ip
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: TCP
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckPort: 8089
      Name: !Join
        - '-'
        - - !Ref EcsClusterName
          - aqua-gateway
      Port: '3622'
      Protocol: TCP
      VpcId: !Ref VpcId
  AquaGatewayGrpcListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    DependsOn:
      - AquaGatewayGrpcTargetGroup
      - AquaNlb
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AquaGatewayGrpcTargetGroup
      LoadBalancerArn: !Ref AquaNlb
      Port: '8444'
      Protocol: TCP
  AquaGatewayGrpcTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    DependsOn:
      - AquaGateway
    Properties:
      TargetType: ip
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: TCP
      HealthyThresholdCount: 2
      HealthCheckPort: 8443
      Name: !Join
        - '-'
        - - !Ref EcsClusterName
          - aqua-gateway-grpc
      Port: '8443'
      Protocol: TCP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
      UnhealthyThresholdCount: 2
      VpcId: !Ref VpcId
  AquaConsoleGrpcListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    DependsOn:
      - AquaConsoleGrpcTargetGroup
      - AquaNlb
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AquaConsoleGrpcTargetGroup
      LoadBalancerArn: !Ref AquaNlb
      Port: '8443'
      Protocol: TCP
  AquaGatewayTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    DependsOn:
      - AquaNlb
    Properties:
      TargetType: ip
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: TCP
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckPort: 8089
      Name: !Join 
        - '-'
        - - !Ref EcsClusterName
          - aqua-gateway
      Port: '3622'
      Protocol: TCP
      VpcId: !Ref VpcId
  AquaConsoleGrpcTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    DependsOn:
      - AquaConsole
    Properties:
      TargetType: ip
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: TCP
      HealthyThresholdCount: 2
      HealthCheckPort: 8443
      Name: !Join 
        - '-'
        - - !Ref EcsClusterName
          - aqua-grpc
      Port: '8443'
      Protocol: TCP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
      UnhealthyThresholdCount: 2
      VpcId: !Ref VpcId
  AquaGatewayTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    DependsOn:
      - AquaEcsTaskRole
      - RdsInstance
      - AquaGatewayLogs
      - Secret0
    Properties:
      Family: !Join 
        - '-'
        - - !Ref EcsClusterName
          - aqua-gateway
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref AquaEcsTaskRole
      RequiresCompatibilities:
        - FARGATE
      Cpu: '2048'
      Memory: '4096'
      TaskRoleArn: !Ref AquaEcsTaskRole
      ContainerDefinitions:
        - Name: !Join 
            - '-'
            - - !Ref EcsClusterName
              - aqua-gateway
          Image: !Ref AquaGatewayImage
          PortMappings:
            - ContainerPort: '3622'
              HostPort: '3622'
              Protocol: tcp
            - ContainerPort: '8089'
              HostPort: '8089'
              Protocol: tcp
            - ContainerPort: '8443'
              HostPort: '8444'
              Protocol: tcp
          Essential: 'true'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Join ['-', ['/aqua/gateway', !Ref EcsClusterName]]
              awslogs-region: !Ref Region
              awslogs-stream-prefix: aquaGateway
          Secrets:
            - Name: SCALOCK_DBPASSWORD
              ValueFrom: !Ref Secret0
            - Name: SCALOCK_AUDIT_DBPASSWORD
              ValueFrom: !Ref Secret0
          Environment:
            - Name: SCALOCK_DBSSL
              Value: require
            - Name: SCALOCK_AUDIT_DBSSL
              Value: require
            - Name: HEALTH_MONITOR
              Value: '0.0.0.0:8089'
            - Name: SCALOCK_DBUSER
              Value: !Ref RdsMasterUsername
            - Name: SCALOCK_DBNAME
              Value: scalock
            - Name: SCALOCK_DBHOST
              Value: !GetAtt 
                - RdsInstance
                - Endpoint.Address
            - Name: SCALOCK_AUDIT_DBUSER
              Value: !Ref RdsMasterUsername
            - Name: SCALOCK_AUDIT_DBNAME
              Value: slk_audit
            - Name: SCALOCK_AUDIT_DBHOST
              Value: !GetAtt 
                - RdsInstance
                - Endpoint.Address
            - Name: AQUA_CONSOLE_SECURE_ADDRESS
              Value: !Join 
                - ''
                - - !GetAtt 
                    - AquaNlb
                    - DNSName
                  - ':8443'
  AquaGatewayService:
    Type: 'AWS::ECS::Service'
    DependsOn:
      - AquaGatewayTaskDefinition
      - AquaNlb
      - AquaGatewayTargetGroup
      - AquaGatewayListener
      - AquaGatewayGrpcListener
      - AquaGatewayGrpcTargetGroup
    Properties:
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref AquaFargateSecurityGroup
          Subnets: !Ref EcsInstanceSubnets
      Cluster: !Ref EcsClusterName
      ServiceName: !Join 
        - '-'
        - - !Ref EcsClusterName
          - aqua-gateway
      DesiredCount: '2'
      DeploymentConfiguration:
        MaximumPercent: '200'
        MinimumHealthyPercent: '100'
      LoadBalancers:
        - ContainerName: !Join 
            - '-'
            - - !Ref EcsClusterName
              - aqua-gateway
          ContainerPort: '3622'
          TargetGroupArn: !Ref AquaGatewayTargetGroup
        - ContainerName: !Join
            - '-'
            - - !Ref EcsClusterName
              - aqua-gateway
          ContainerPort: '8443'
          TargetGroupArn: !Ref AquaGatewayGrpcTargetGroup
      TaskDefinition: !Ref AquaGatewayTaskDefinition
  AquaConsoleSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'InstanceSubnetGroup:
    Properties:
      GroupDescription: Allow access to Aqua Console Instances
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: !Ref AquaConsoleAccess
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref AquaConsoleAccess
        - IpProtocol: tcp
          FromPort: '8433'
          ToPort: '8433'
          CidrIp: !Ref AquaConsoleAccess
  AquaFargateSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn:
      - AquaConsoleSecurityGroup
    Properties:
      GroupDescription: Allow lb access to fargate tasks
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3622'
          ToPort: '3622'
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: '8444'
          ToPort: '3443'
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: '8089'
          ToPort: '8089'
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: '8443'
          ToPort: '8443'
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          SourceSecurityGroupId: !Ref AquaConsoleSecurityGroup
  AquaEcsTaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Join 
        - '-'
        - - !Ref EcsClusterName
          - AquaEcsTaskRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Join 
            - '-'
            - - !Ref EcsClusterName
              - AquaScannerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'
                  - 'ecr:DescribeImages'
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:DescribeRepositories'
                  - 'ecr:ListImages'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetRepositoryPolicy'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
              - !Ref 'AWS::NoValue'
        - PolicyName: !Join 
            - '-'
            - - !Ref EcsClusterName
              - AquaSecretsManagerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'secretsmanager:GetSecretValue'
                Resource: !Ref Secret0
  AquaConsoleLogs:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join ['-', ['/aqua/console', !Ref EcsClusterName]]
      RetentionInDays: 30
  AquaGatewayLogs:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join ['-', ['/aqua/gateway', !Ref EcsClusterName]]
      RetentionInDays: 30
  AquaNlb:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: !Join 
        - '-'
        - - !Ref EcsClusterName
          - aquaNlb
      Scheme: internal
      Subnets: !Ref LbSubnets
      Type: network
      LoadBalancerAttributes: 
        - Key: load_balancing.cross_zone.enabled
          Value: true
  RdsInstance:
    Type: 'AWS::RDS::DBInstance'
    DependsOn:
      - RdsSecurityGroup
      - RdsInstanceSubnetGroup
    Properties:
      AllocatedStorage: !Ref RdsStorage
      AutoMinorVersionUpgrade: 'false'
      VPCSecurityGroups:
        - !Ref RdsSecurityGroup
      DBName: !Ref RdsInstanceName
      BackupRetentionPeriod: '7'
      DBInstanceIdentifier: !Join ['-', ['aquadb', !Ref EcsClusterName]]
      DBInstanceClass: !Ref RdsInstanceClass
      DBSubnetGroupName: !Ref RdsInstanceSubnetGroup
      Engine: postgres
      EngineVersion: 9.6.9
      MasterUsername: !Ref RdsMasterUsername
      MasterUserPassword: !Ref RdsMasterPassword
      MultiAZ: !Ref MultiAzDatabase
      StorageType: gp2
  RdsInstanceSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Source subnet
      SubnetIds: !Ref EcsInstanceSubnets
  RdsSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow access to RDS Instances
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          SourceSecurityGroupId: !Ref AquaFargateSecurityGroup
  Secret0:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: Aqua RDS password
      Name: !Join 
        - '/'
        - - !Ref EcsClusterName
          - AquaRdsPassword
      SecretString: 
        !Ref RdsMasterPassword
Outputs:
  AquaConsole:
    Description: URL to access Aqua Security Console
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - AquaConsole
          - DNSName
        - ':8080'
  AquaConsoleGrpcConnection:
    Description: >-
      DNS to server gRPC
    Value: !Join 
      - ''
      - - !GetAtt 
          - AquaNlb
          - DNSName
        - ':8443'
  AquaGatewayExternalConnection:
    Description: >-
      Aqua Enforcer gateway startup connection string for use when Enforcers are
      external to VPC.
    Value: !Join 
      - ''
      - - !GetAtt 
          - AquaNlb
          - DNSName
        - ':3622'
  AquaGatewayExternalGrpcConnection:
    Description: >-
      DNS to gateway gRPC
    Value: !Join
      - ''
      - - !GetAtt
          - AquaNlb
          - DNSName
        - ':8444'
  AquaEcsTaskRole:
    Description: IAM role assigned to access ECR
    Value: !Ref AquaEcsTaskRole
